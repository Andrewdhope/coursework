rbinom(100, size = 1, prob = 0.7)
flips2 <-rbinom(100, size = 1, prob = 0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, 100, 25)
?rpois
rpois(5, 10)
my_pois <- replications(100, rpois(5, 10))
my_pois <- replicate(100, rpois(5, 10))
mu_pois
my_pois
colMeans(my_pois)
cm <- colMeans(my_pois)
hist(cm)
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot(x = cars$dist, y = cars$speed)
?plot
plot(x = cars$dist, y = cars$speed, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(cars, main = "My Plot")
plot(cars, sub = "My Plot Subtitle")
plot(cars, col = 2)
plot(cars, xlim = c(10, 15))
plot(cars, pch = 2)
data(mtcars)
str(mtcars)
?boxplot
boxplot(mpg ~ cyl)
boxplot(data = mtcars, formula = mpg ~ cyl)
boxplot(x = mtcars, formula = mpg ~ cyl)
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
swirl()
library(swirl)
swirl()
library("swirl")
swirl
swirl()
next()
next
?info
info()
skip()
skip()
skip()
skip()
skip()
skip()
info()
?info
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500 & r_os == "linux-gnu")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id)
)
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(R.version), ip_id)
arrange(cran2, country, desc(R_version), ip_id)
arrange(cran2, country, desc(r_version), ip_id)
select(cran, ip_id, package, size)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by()
?group_by
by_package <- group_by(cran, package)
by_package
summarize(mean(size), by_package)
summarize(by_package, mean(size))
submit()
submit()
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
filter(pack_sum, count > 679)
top_counts <-filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, desc(count)
)
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
arrange(top_unique, desc(unique))
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res <- gather(students2, sex_class, count)
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(res, sex_class, sex, class, sep = "_"
)
separate(res, sex_class, into = c("sex", "class"), sep = "_"
)
separate(res, sex_class, into = c("sex", "class"))
students2
submit()
students3
?gather
submit()
submit()
?spread
submit()
library(readr)
parse_number("class5")
?mutate
submit()
submit()
submit()
submit()
skip()
students4
submit()
submit()
submit()
submit()
passed
failed
mutate(passed, passed <- status = "passed")
passed <- mutate(passed, status = "passed")
failed <- mutate(passed, status = "failed")
failed <- mutate(failed, status = "failed")
bind_rows(passed, faield)
bind_rows(passed, failed)
sat
?separate
submit()
submit()
submit()
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv""
?download.file()
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv""
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
?download.file
getwd
getwd()
dir.create("./R/course/3.3")
setwd("./R/course/3,3")
setwd("./R/course/3.3")
download.file(fileUrl, "quizdata")
quizdata <- read.csv("quizdata.csv")
quizdata <- read.csv("quizdata")
quizdata
library(dplyr)
quizdata[ACR == 3 & AGS == 6]
quizdata[quizdata$ACR == 3 & quizdata$AGS == 6]
quizdata[quizdata$ACR == 3 & quizdata$AGS == 6,]
quizdata
quizdata[quizdata$ACR == 3 & quizdata$AGS == 6,]
quizdata[[quizdata$ACR == 3 & quizdata$AGS == 6,]]
quizdata$ACR == 3
(quizdata$ACR == 3 & quizdata$AGS == 6)
agricultureLogical <- (quizdata$ACR == 3 & quizdata$AGS == 6)
quizdata[which(agricultureLogical)]
quizdata[which(agricultureLogical),]
library(jpeg)
library("jpeg")
library(jpeg)
readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", native = TRUE)
getwd()
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", img2read.jpeg)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", "img2read.jpeg")
readJPEG("img2read.jpeg", native = TRUE)
jpegData <- readJPEG("img2read.jpeg", native = TRUE)
?quantile
quantile(jpegData, probs = 30)
quantile(jpegData, probs = .30)
quantile(jpegData, probs = .80)
quantile(jpegData, probs = .20)
quantile(jpegData, probs = .70)
jpegData <- readJPEG("img2read.jpeg", native = TRUE)
quantile(jpegData, probs = .70)
quantile(jpegData, probs = .30)
quantile(jpegData, probs = .80)
quantile(jpegData, probs = seq(0, 1, 10))
?seq
quantile(jpegData, probs = seq(0, 1, by = 0.1))
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", "img2read.jpeg")
jpegData <- readJPEG("img2read.jpeg", native = TRUE)
jpegData <- readJPEG("img2read.jpg", native = TRUE)
quantile(jpegData, probs = seq(0, 1, by = 0.1))
file.create("gdpQuizdata")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", gdpQuizdata.csv)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", gdpQuizdata.csv)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", "gdpQuizdata.csv"")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", "gdpQuizdata.csv")
file.create("eduQuizdata.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv", "eduQuizdata.csv")
eduQuizdata <- eduQuizdata.csv
eduQuizdata <- load(eduQuizdata.csv)
eduQuizdata <- read.csv(eduQuizdata.csv)
eduQuizdata <- read.csv(eduQuizdata.csv"")
eduQuizdata <- read.csv("eduQuizdata.csv")
gdpQuizdata <- read.csv("gdpQuizdata.csv")
?join
str(eduQuizdata)
str(gdpQuizdata)
gdpQuizdata
full_join(eduQuizdata, gdpQuizdata, c("CountryCode" = "X"))
gdpQuizdata
last(full_join(eduQuizdata, gdpQuizdata, c("CountryCode" = "X")))
tail(full_join(eduQuizdata, gdpQuizdata, c("CountryCode" = "X")))
full_join(eduQuizdata, gdpQuizdata, c("CountryCode" = "X"))
joined <- full_join(eduQuizdata, gdpQuizdata, c("CountryCode" = "X"))
joined$CountryCode
joined$X
joined$X.2
arrange(joined, Gross.domestic.product.2012)
arranged <- arrange(joined, Gross.domestic.product.2012)
arranged$CountryCode
arranged$Short.Name
arranged$Gross.domestic.product.2012
left_join(eduQuizdata, gdpQuizdata, c("CountryCode" = "X"))
joined <- left_join(eduQuizdata, gdpQuizdata, c("CountryCode" = "X"))
arranged <- arrange(joined, Gross.domestic.product.2012)
arranged$Gross.domestic.product.2012
arranged <- arrange(joined, as.numeric(Gross.domestic.product.2012))
arranged$Gross.domestic.product.2012
order(joined[order(joined$Gross.domestic.product.2012)])
order(joined[order(joined$Gross.domestic.product.2012, rm.na = TRUE)])
View(quizdata)
View(gdpQuizdata)
View(eduQuizdata)
View(gdpQuizdata)
merged <- merge(eduQuizdata, gdpQuizdata, by.x="CountryCode", by.y = "X", all = TRUE)
View(merged)
count(!is.na(merged$CountryCode))
sum(!is.na(merged$CountryCode))
merged$CountryCode
is.na(merged$CountryCode)
is.character(merged$CountryCode)
arrange(merged, Gross.domestic.product.2012)
mergedArranged <- arrange(merged, Gross.domestic.product.2012)
View(mergedArranged)
mutate(merged, ranking = as.numeric(Gross.domestic.product.2012))
merged <- mutate(merged, ranking = as.numeric(Gross.domestic.product.2012))
View(merged)
mergedArranged <- arrange(merged, ranking)
View(mergedArranged)
merged$ranking
arrange(merged$ranking, ranking)
arrange(merged$ranking)
mergedArranged <- arrange(merged, ranking)
left_join(x, y, by = c("CountryCode", "X"))
lj <- left_join(eduQuizdata, gdpQuizdata, by = c("CountryCode", "X"))
lj <- left_join(eduQuizdata, gdpQuizdata, by = c("CountryCode"))
lj <- left_join(eduQuizdata, gdpQuizdata, by = c("X', "CountryCode"))
lj <- left_join(eduQuizdata, gdpQuizdata, by = c("X", "CountryCode"))
lj <- left_join(eduQuizdata, gdpQuizdata, "CountryCode")
lj <- left_join(eduQuizdata, gdpQuizdata, by = "CountryCode")
lj <- left_join(eduQuizdata, gdpQuizdata, by = CountryCode)
lj <- left_join(eduQuizdata, gdpQuizdata, by = c("CountryCode", "X"))
renamedGDP <- rename(gdpQuizdata, "X", "CountryCode")
renamedGDP <- rename(gdpQuizdata, X = "CountryCode")
arrange(gdpQuizdata, X)
arrange(gdpQuizdata, desc(X)
)
arrangeGdp <- arrange(gdpQuizdata, desc(X))
View(arrangeGdp)
arrangeGdp <- arrange(gdpQuizdata, desc(Gross.domestic.product.2012))
mutate(arrangeGdp, rank = as.numeric(Gross.domestic.product.2012))
mutatedAG <- mutate(arrangeGdp, rank = as.numeric(Gross.domestic.product.2012))
View(mutatedAG)
as.numeric(101)
class(gdpQuizdata$Gross.domestic.product.2012)
sort(gdpQuizdata$Gross.domestic.product.2012, decreasing = TRUE, na.last = TRUE)
mutatedAG <- mutate(arrangeGdp, rank = as.character(Gross.domestic.product.2012))
sort(gdpQuizdata$rank, decreasing = TRUE, na.last = TRUE)
sort(gdpQuizdata$rank, decreasing = TRUE)
sort(gdpQuizdata$Ranking, decreasing = TRUE, na.last = TRUE)
sort(mutatedAG$Ranking, decreasing = TRUE, na.last = TRUE)
sort(mutatedAG$rank, decreasing = TRUE, na.last = TRUE)
order(mutatedAG$rank)
mutatedAG <- mutate(arrangeGdp, rank = as.numeric(Gross.domestic.product.2012))
sort(mutatedAG$rank, decreasing = TRUE, na.last = TRUE)
View(mutatedAG)
View(sort(mutatedAG$X.3, decreasing = TRUE, na.last = TRUE))
dollarSort <- sort(mutatedAG$X.3, decreasing = TRUE, na.last = TRUE)
View(dollarSort)
mutatedAG <- mutate(arrangeGdp, rank = as.numeric(as.character(Gross.domestic.product.2012))
)
View(mutatedAG)
sortMutated <- sort(mutatedAG, rank, na.last = TRUE)
sortMutated <- sort(mutatedAG, rank, decreasing = TRUE, na.last = TRUE)
sortMutated <- arrange(mutatedAG, rank)
View(sortMutated)
mergedSorted <- merge(eduQuizdata, sortMutated, by.x="CountryCode", by.y = "X", all = TRUE)
View(mergedSorted)
mergedSorted <- arrange(mergedSorted, rank)
View(mergedSorted)
summary(mergedSorted$Income.Group)
?split
split(mergedSort, Income.Group)
split(mergedSorted, Income.Group)
split(mergedSorted, "Income.Group")
splitted <- split(mergedSorted, "Income.Group")
sapply(splitted, mean(splitted$rank))
?mean
sapply(splitted, mean(splitted$rank, na.rm = TRUE))
splitted$rank
View(splitted)
splitted <- split(mergedSorted$Income.Group, mergedSorted$rank)
splitted <- split(mergedSorted$rank, mergedSorted$Income.Group)
splitted
sapply(splitted, mean)
splitted <- split(mergedSorted$rank, mergedSorted$Income.Group)
complete.cases(splitted)
?cut
?table
?cut
cutted <- (mergedSorted$rank, 5)
cutted <- cut(mergedSorted$rank, 5)
cutted
?table
table(cutted, mergeSorted$Income.Group)
table(cutted, mergedSorted$Income.Group)
rm()
library(httr)
myapp <- oauth_app("github", key = "3ba49c05c52a96264bc9", secret = "378e0cf0ca47aca75c315f3c494a5238da2b303b")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
getwd()
download.packages(sqldf)
download.packages('sqldf")
download.packages("sqldf")
library(sqldf)
?download.packages)
?download.packages
install.packages(sqldf)
install.packages("sqldf")
getwd()
setwd("../3.2")
file.exists("../3.2")
dir.create("../3.3")
file.create("../3.2/quizdata2.csv")
dir.create("../3.2")
file.create("../3.2/quizdata2.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", "../3.2/quizdata2.csv")
quizdata2 <- read.csv("../3.2/quizdata2.csv")
setwd("../3.2")
sqldf("select pwgtp1 from acs where AGEP <50")
library(sqldf)
sqldf("select pwgtp1 from acs where AGEP <50")
acs <- quizdata2
sqldf("select pwgtp1 from acs where AGEP <50")
unique(acs$AGEP)
sqldf("select distinct AGEP from acs")
con = url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode = read.lines(con)
htmlCode = readLines(con)
close(con)
readLines
htmlCode
nchar(htmlCode[10])
nchar(htmlCode[10, 20])
nchar(htmlCode[c(10,20,30, 100)])
file.create("quizdata5.for")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", "quizdata5.for")
quizdata5for <- read.csv("quizdata5.for")
quizdata5for
colSums(quizdata5for[c(4,5)])
?colSums
colSums(quizdata5for)
colSums(quizdata5for[4])
quizdata5for[4]
names(quizdata5for)
quizdata5for <- read.fwf("quizdata5.for")
?read.fwf
quizdata5for <- read.fwf("quizdata5.for", c(8, 4, 4, 4, 4, 4, 4, 4, 4))
quizdata5for
quizdata5for <- read.fwf("quizdata5.for", c(10, 4, 4, 4, 4, 4, 4, 4, 4))
quizdata5for
quizdata5for <- read.fwf("quizdata5.for", c(11, 4, 4, 4, 4, 4, 4, 4, 4))
quizdata5for
quizdata5for <- read.fwf("quizdata5.for", c(11, 4, 5, 4, 4, 4, 4, 4, 4))
quizdata5for
colSums(quizdata5for[5], na.rm = TRUE)
quizdata5for[5]
class(quizdata5for[5])
class(quizdata5for[[5]])
colSums(as.numeric(as.character(quizdata5for[[5]])), na.rm = TRUE)
sum(as.numeric(as.character(quizdata5for[[5]])), na.rm = TRUE)
sum(quizdata5for[[5]])
sum(as.character(quizdata5for[[5]])
)
sum(as.numeric(as.character(quizdata5for[[5]])))
sum(as.numeric(as.character(quizdata5for[[5]])), rm.na = TRUE)
(as.numeric(as.character(quizdata5for[[5]])))
as.character(quizdata5for[[5]]))
as.character(quizdata5for[[5]])
quizdata5for[[5]]
summary(quizdata5for)
quizdata5for <- read.fwf("quizdata5.for", c(11, 4, 5, 4, 4, 4, 4, 4, 4))
View(quizdata5for)
quizdata5for <- read.fwf("quizdata5.for", c(11, 4, 5, 4, 4, 4, 4, 4, 4), skip = 4)
as.character(quizdata5for[[6]])
sum(as.numeric(as.character(quizdata5for[[5]])))
sum(as.numeric(as.character(quizdata5for[[6]])))
library(swirl)
swirl()
Sys.getlocale("LC_TIME")
swirl()
library(lubridate)
help(package = lubridate)
help(package = dplyr)
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_moment <- now()
this_moment
second(this_moment)
ymd("1989-05-17")
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ydm(dt1)
ydm(dt2)
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment, hours = 10, minutes = 28)
this_moment
now("America/New_York")
nyc <- now("America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes = 34)
depart
depart + hours(15)
arrive <- depart + hours(15) + minutes(50)
?with_tz
with_tz(arrive, "Asia/Hong_Kong")
arrive <- with_tz(arrive, "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?interval
how_long <- interval(last_time, arrive)
as.period(how_long)
stopwatch()
swirl()
swirl()
